@model MyWebHzg.Frontend.HzgWeb.Models.NewEditMovieModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Title</h2>

@using (Html.BeginForm("Edit", "Movie", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Movie.MovieId);
    
    // ReturnUri wird beim Ändern als Parameter in einem hidden Formularfeld übermittelt 
    <input type="hidden" name="ReturnUri" value="@ViewBag.ReturnUri" />
            
    <h4>Movie</h4>
    <hr />
    @Html.ValidationSummary(true)
    
    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Title, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.Title)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.GenreId, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => Model.Movie.GenreId, Model.Genres, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Movie.GenreId)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.MediumTypeId, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => Model.Movie.MediumTypeId, Model.MediumTypes, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Movie.MediumTypeId)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Price, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.Price)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.ReleaseDate, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.ReleaseDate)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Speichern" class="btn btn-default" />


            @*<input type="button" value="Abbrechen" onclick="window.location= '/Movie/Index'" class="btn btn-primary" />*@
            @*Damit wir einmal auf den einen und einmal auf den anderen Dialog zurück springen*@
            @*<input type="button" value="Abbrechen" onclick="window.location='@(string.IsNullOrEmpty(ViewBag.ReturnUri)?"/Movie/Index":ViewBag.ReturnUri)'" class="btn btn-primary" />*@
            <input type="button" value="Abbrechen" onclick="window.location='@ViewBag.ReturnUri'" class="btn btn-primary" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/globalize")
    
    <script src="~/Scripts/globalize.0.1.3/cultures/globalize.culture.@(System.Threading.Thread.CurrentThread.CurrentCulture.Name).js"></script>

    <script type="text/javascript">
        $(document).ready(
                function () {
                       Globalize.culture('@(System.Threading.Thread.CurrentThread.CurrentCulture.Name)');
                });
    </script>        

}